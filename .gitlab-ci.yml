stages:
  - configure
  - build
  - deploy
  - docker

variables:
  SSH: ssh -o StrictHostKeyChecking=no
  SCP: scp -rC


env base:
  stage: configure
  tags: [docker]
  variables:
    GIT_STRATEGY: none
  script:
    - echo 'export SSH="${SSH} -p 22"' >> variables_base
    - echo 'export SCP="${SCP} -P 22"' >> variables_base
    - echo 'export NOW=$(date +'%Y-%m-%d_%H-%M-%S')' >> variables_base
  artifacts:
    expire_in: 1 week
    paths: [variables_base]


env develop:
  stage: configure
  tags: [docker]
  only: [develop]
  environment:
    name: dev
    url: https://auvix.bikdev.ru
  variables:
    GIT_STRATEGY: none
  script:
    - echo 'export ENV="develop"' >> variables
    - echo 'export DEPLOY_HOST="auvix.bikdev.ru"' >> variables
    - echo 'export DEPLOY_DIR="/var/www/frontend/auvix.bikdev.ru/"' >> variables
    - echo 'export PM2_RESTART="pm2 start"' >> variables
  artifacts:
    expire_in: 1 week
    paths: [variables]



conf bikdev:
  stage: configure
  tags: [docker]
  only: [develop]
  script:
    - cp .env.bikdev .env
  artifacts:
    paths:
      - .env
    expire_in: 1 week


npm build:
  stage: build
  tags: [docker]
  image: node:16.17-buster
  cache:
    paths:
      - node_modules
      - .npm
  only: [master, develop]
  script:
    - npm install -g webpack webpack-cli webpack-dev-server rimraf @nestjs/cli
    - npm install --cache .npm --prefer-offline
    #    - npm link webpack
    #    - npm run generate-typings
    - npm run build
  artifacts:
    expire_in: 1 week
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    paths:
      - node_modules
      - .nuxt/
#      - static/
#      - src/types/


deploy:
  stage: deploy
  tags: [openssh]
  only: [master, develop]
  script:
    - if [[ -f variables_base ]]; then source variables_base; fi
    - if [[ -f variables ]]; then source variables; fi
    - apk add rsync
    - mkdir -p ~/.ssh;
      echo "${SSH_OPTIONS}" > ~/.ssh/config;
      echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa;
      echo "${SSH_PUBLIC_KEY}" > ~/.ssh/id_rsa.pub;
      chmod 700 ~/.ssh; chmod 644 ~/.ssh/config; chmod 600 ~/.ssh/id_rsa.pub; chmod 600 ~/.ssh/id_rsa
    - if [[ ! -z "$PROXY" ]]; then ssh -o StrictHostKeyChecking=no ${PROXY} exit; echo "proxy"; fi
    - rm -rf .git
    - mkdir -p static/upload
    - ${SSH} ${DEPLOY_HOST} "echo \"connected\""
    - rsync -avqz --include-from ./.rsync_include --stats --delete -e "ssh -o StrictHostKeyChecking=no" . ${DEPLOY_HOST}:${DEPLOY_DIR}

update:
  stage: docker
  tags: [openssh]
  only: [master, develop]
  variables:
    GIT_STRATEGY: none
  script:
    - if [[ -f variables_base ]]; then source variables_base; fi
    - if [[ -f variables ]]; then source variables; fi
    - mkdir -p ~/.ssh;
      echo "${SSH_OPTIONS}" > ~/.ssh/config;
      echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa;
      echo "${SSH_PUBLIC_KEY}" > ~/.ssh/id_rsa.pub;
      chmod 700 ~/.ssh; chmod 644 ~/.ssh/config; chmod 600 ~/.ssh/id_rsa.pub; chmod 600 ~/.ssh/id_rsa
    - if [[ ! -z "$PROXY" ]]; then ssh -o StrictHostKeyChecking=no ${PROXY} exit; echo "proxy"; fi
    - ${SSH} ${DEPLOY_HOST} "echo \"connected\""
    - ${SSH} ${DEPLOY_HOST} "cd ${DEPLOY_DIR}; ${PM2_RESTART}"
